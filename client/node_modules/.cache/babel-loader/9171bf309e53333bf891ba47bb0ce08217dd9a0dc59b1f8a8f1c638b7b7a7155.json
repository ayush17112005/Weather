{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\Whether\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // useState hook to manage city name\n  const [city, setCity] = useState('');\n  const [weather, setWeather] = useState(null);\n\n  // Function to handle form submission\n  async function handleSubmit(e) {\n    e.preventDefault(); // Prevent page reload\n    console.log(\"Submitted\");\n    try {\n      // Sending a POST request to the backend with the city name\n      const response = await axios.post(\"http://localhost:3001/weather\", {\n        city\n      });\n      console.log(response.data); // Log the response from the backend\n      setWeather(response.data);\n    } catch (err) {\n      console.log(err); // Log any error if occurs\n    }\n  }\n\n  // Function to handle input changes\n  function handleOnChange(e) {\n    setCity(e.target.value); // Update city state with input value\n    console.log(e.target.value); // Log the current input value\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleOnChange,\n        type: \"text\",\n        placeholder: \"Write your city name\",\n        value: city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), weather && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Weather Discription: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"Rlt+ue27S+f6rx/tpM2n2/OvG3k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","city","setCity","weather","setWeather","handleSubmit","e","preventDefault","console","log","response","post","data","err","handleOnChange","target","value","children","onSubmit","onChange","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/Whether/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst App = () => {\n  // useState hook to manage city name\n  const [city, setCity] = useState('');\n  const [weather, setWeather] = useState(null);\n\n  // Function to handle form submission\n  async function handleSubmit(e) {\n    e.preventDefault(); // Prevent page reload\n    console.log(\"Submitted\");\n\n    try {\n      // Sending a POST request to the backend with the city name\n      const response = await axios.post(\"http://localhost:3001/weather\", { city });\n      console.log(response.data); // Log the response from the backend\n      setWeather(response.data);\n    } catch (err) {\n      console.log(err); // Log any error if occurs\n    }\n  }\n\n  // Function to handle input changes\n  function handleOnChange(e) {\n    setCity(e.target.value); // Update city state with input value\n    console.log(e.target.value); // Log the current input value\n  }\n\n  return (\n    <>\n    <form onSubmit={handleSubmit}>\n      <input \n        onChange={handleOnChange} \n        type='text' \n        placeholder='Write your city name' \n        value={city}\n      />\n      <input type='submit' />\n    </form>\n\n    {weather && \n      <p>Weather Discription: {}</p>\n    }\n\n\n    </>\n\n    \n\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,eAAeY,YAAYA,CAACC,CAAC,EAAE;IAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;IACpBC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IAExB,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAC,+BAA+B,EAAE;QAAEV;MAAK,CAAC,CAAC;MAC5EO,OAAO,CAACC,GAAG,CAACC,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;MAC5BR,UAAU,CAACM,QAAQ,CAACE,IAAI,CAAC;IAC3B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZL,OAAO,CAACC,GAAG,CAACI,GAAG,CAAC,CAAC,CAAC;IACpB;EACF;;EAEA;EACA,SAASC,cAAcA,CAACR,CAAC,EAAE;IACzBJ,OAAO,CAACI,CAAC,CAACS,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACzBR,OAAO,CAACC,GAAG,CAACH,CAAC,CAACS,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EAC/B;EAEA,oBACEpB,OAAA,CAAAE,SAAA;IAAAmB,QAAA,gBACArB,OAAA;MAAMsB,QAAQ,EAAEb,YAAa;MAAAY,QAAA,gBAC3BrB,OAAA;QACEuB,QAAQ,EAAEL,cAAe;QACzBM,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,sBAAsB;QAClCL,KAAK,EAAEf;MAAK;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC,eACF7B,OAAA;QAAOwB,IAAI,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,EAENtB,OAAO,iBACNP,OAAA;MAAAqB,QAAA,EAAG;IAAqB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA,eAI9B,CAAC;AAKP,CAAC;AAAAzB,EAAA,CAhDKD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAkDT,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}