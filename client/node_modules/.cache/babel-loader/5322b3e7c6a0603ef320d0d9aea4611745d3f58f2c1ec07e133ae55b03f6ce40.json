{"ast":null,"code":"import { extendTheme } from '@chakra-ui/react';\n\n// Custom function to handle color mode values\nfunction getColorModeValue(lightValue, darkValue, props) {\n  return props.colorMode === 'dark' ? darkValue : lightValue;\n}\n\n// Define the global styles using a more basic syntax\nconst styles = {\n  global: function (props) {\n    return {\n      body: {\n        // Background color changes based on the color mode (light or dark)\n        bg: getColorModeValue(\"gray.100\", \"#000\", props),\n        // Text color changes based on the color mode (light or dark)\n        color: getColorModeValue(\"gray.800\", \"whiteAlpha.900\", props)\n      }\n    };\n  }\n};\n\n// 1. Add your color mode config\nconst config = {\n  initialColorMode: 'dark',\n  // Set the initial color mode to light\n  useSystemColorMode: false // Do not use the system's color mode preference\n};\n\n// 2. Extend the theme with the configuration and styles\nconst theme = extendTheme({\n  config,\n  styles\n});\nexport default theme;\n\n/*\r\nTip: Chakra stores the color mode in localStorage or in cookies and appends a className to the body to ensure the \r\ncolor mode is persistent.\r\nIn case you need to reset the color mode, you must delete the item from localStorage or cookies, so on next page \r\nload the value is initialized like the first time user visited the page.\r\n*/","map":{"version":3,"names":["extendTheme","getColorModeValue","lightValue","darkValue","props","colorMode","styles","global","body","bg","color","config","initialColorMode","useSystemColorMode","theme"],"sources":["C:/Users/HP/Desktop/Whether/client/src/components/theme.jsx"],"sourcesContent":["import { extendTheme } from '@chakra-ui/react';\r\n\r\n// Custom function to handle color mode values\r\nfunction getColorModeValue(lightValue, darkValue, props) {\r\n  return props.colorMode === 'dark' ? darkValue : lightValue;\r\n}\r\n\r\n// Define the global styles using a more basic syntax\r\nconst styles = {\r\n  global: function(props) {\r\n    return {\r\n      body: {\r\n        // Background color changes based on the color mode (light or dark)\r\n        bg: getColorModeValue(\"gray.100\", \"#000\", props),\r\n        // Text color changes based on the color mode (light or dark)\r\n        color: getColorModeValue(\"gray.800\", \"whiteAlpha.900\", props)\r\n      }\r\n    };\r\n  }\r\n};\r\n\r\n// 1. Add your color mode config\r\nconst config = {\r\n  initialColorMode: 'dark',  // Set the initial color mode to light\r\n  useSystemColorMode: false,  // Do not use the system's color mode preference\r\n};\r\n\r\n// 2. Extend the theme with the configuration and styles\r\nconst theme = extendTheme({ config, styles });\r\n\r\nexport default theme;\r\n\r\n/*\r\nTip: Chakra stores the color mode in localStorage or in cookies and appends a className to the body to ensure the \r\ncolor mode is persistent.\r\nIn case you need to reset the color mode, you must delete the item from localStorage or cookies, so on next page \r\nload the value is initialized like the first time user visited the page.\r\n*/"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;;AAE9C;AACA,SAASC,iBAAiBA,CAACC,UAAU,EAAEC,SAAS,EAAEC,KAAK,EAAE;EACvD,OAAOA,KAAK,CAACC,SAAS,KAAK,MAAM,GAAGF,SAAS,GAAGD,UAAU;AAC5D;;AAEA;AACA,MAAMI,MAAM,GAAG;EACbC,MAAM,EAAE,SAAAA,CAASH,KAAK,EAAE;IACtB,OAAO;MACLI,IAAI,EAAE;QACJ;QACAC,EAAE,EAAER,iBAAiB,CAAC,UAAU,EAAE,MAAM,EAAEG,KAAK,CAAC;QAChD;QACAM,KAAK,EAAET,iBAAiB,CAAC,UAAU,EAAE,gBAAgB,EAAEG,KAAK;MAC9D;IACF,CAAC;EACH;AACF,CAAC;;AAED;AACA,MAAMO,MAAM,GAAG;EACbC,gBAAgB,EAAE,MAAM;EAAG;EAC3BC,kBAAkB,EAAE,KAAK,CAAG;AAC9B,CAAC;;AAED;AACA,MAAMC,KAAK,GAAGd,WAAW,CAAC;EAAEW,MAAM;EAAEL;AAAO,CAAC,CAAC;AAE7C,eAAeQ,KAAK;;AAEpB;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}